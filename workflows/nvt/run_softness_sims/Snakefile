in_dir_tag = config["in_dir_tag"]

def dd(post_path):
    """
    Prepend the data directory to the provided path
    """
    import os
    tmp = os.environ["MONK_DATA_DIR"] + "/monk/" + post_path
    return tmp

def gen_all():
    """
    Iterate over data supplied in the configuration file for all rule
    """
    outputs = []
    try:
        seed = int(config["starting_seed"])
    except:
        seed = 0
    for temp in config["temps"]:
        for pair_phi in config["pairs_phis"]:
            tpair = '-'.join(pair_phi[0])
            tphi = pair_phi[1]
            outputs.append(dd(f"pre_softness/{config['out_dir_tag']}/pair-{tpair}_phi-{tphi}/temp-{temp}_seed-{seed}.gsd"))
            seed += 1

    return outputs

def config_param(path, tag):
    obj = config[tag]
    dic = {tag:obj}
    fpath = path.replace("{"+tag+"}", obj)
    return fpath


rule all:
    input: 
        *gen_all()

rule simulate:
    input:
        dd(
            config_param(
                "supercooled_states/{in_dir_tag}/pair-{pair}_phi-{phi}/temp-{temp}_seed-{seed}.gsd",
                "in_dir_tag"
            )
        )
    output:
        protected(dd("pre_softness/{out_dir_tag}/pair-{pair}_phi-{phi}/temp-{temp}_seed-{seed}.gsd"))
    params:
        split_pair=lambda wildcards: wildcards.pair.split("-"),
        dt=config["dt"],
        dump_rate=config["dump_rate"],
        sim_time=config["sim_time"],
        throw_away=config["throw_away"]
    resources:
        time="1-00:00:00",
        gpu=1,
        mem_mb=1000
    shell:
        "python ../../../scripts/nvt/resume_and_dump.py {input} {output} "
        "--pair {params.split_pair} --dt {params.dt}"
        "--temp {wildcards.temp} "
        "--dump-rate {params.dump_rate} "
        "--sim-time {params.sim_time} --throw-away {params.throw_away} "
        "--seed {wildcards.seed}"
